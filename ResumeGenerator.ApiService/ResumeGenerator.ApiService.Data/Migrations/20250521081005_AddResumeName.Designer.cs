// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResumeGenerator.ApiService.Data.Context;

#nullable disable

namespace ResumeGenerator.ApiService.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521081005_AddResumeName")]
    partial class AddResumeName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResumeGenerator.ApiService.Data.Entities.HardSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("HardSkillName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hard_skill_name");

                    b.Property<Guid>("ResumeId")
                        .HasColumnType("uuid")
                        .HasColumnName("resume_id");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.ToTable("hard_skills", (string)null);
                });

            modelBuilder.Entity("ResumeGenerator.ApiService.Data.Entities.Resume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("DesiredPosition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("desired_position");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("education");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("integer")
                        .HasColumnName("experience_years");

                    b.Property<string>("GitHubLink")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("github_link");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("ResumeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("resume_name");

                    b.Property<int>("ResumeStatus")
                        .HasColumnType("integer")
                        .HasColumnName("resume_status");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer")
                        .HasColumnName("retry_count");

                    b.Property<string>("TelegramLink")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telegram_link");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_first_name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_last_name");

                    b.Property<string>("UserPatronymic")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_patronymic");

                    b.HasKey("Id");

                    b.ToTable("resumes", (string)null);
                });

            modelBuilder.Entity("ResumeGenerator.ApiService.Data.Entities.SoftSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ResumeId")
                        .HasColumnType("uuid")
                        .HasColumnName("resume_id");

                    b.Property<string>("SoftSkillName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("soft_skill_name");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.ToTable("soft_skills", (string)null);
                });

            modelBuilder.Entity("ResumeGenerator.ApiService.Data.Entities.HardSkill", b =>
                {
                    b.HasOne("ResumeGenerator.ApiService.Data.Entities.Resume", "Resume")
                        .WithMany("HardSkills")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("ResumeGenerator.ApiService.Data.Entities.SoftSkill", b =>
                {
                    b.HasOne("ResumeGenerator.ApiService.Data.Entities.Resume", "Resume")
                        .WithMany("SoftSkills")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("ResumeGenerator.ApiService.Data.Entities.Resume", b =>
                {
                    b.Navigation("HardSkills");

                    b.Navigation("SoftSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
